- Si quiero sumar dos arrays y son de distinto tamaño, tngo que poner al resultado un limite de capacidad. Este limite 
lo marca el tamaño del array mas pequeño. 

Ej:
// Aseguramos que los vectores tengan el mismo tamaño
    int tamaño = Math.min(vectorA.length, vectorB.length);
    int[] resultado = new int[tamaño];

- Para concatenar Arrays y poder imprimirlos por consola si nos da error deberemos de usar el metodo: Arrays.toString()

-Funcion para invertir el array 

    public static int[] invertir(int[] vector) {
            
        int[] resultado = new int[vector.length];

        // Rellenar el array resultado con los elementos en orden invertido
        for (int i = 0; i < vector.length; i++) {
            resultado[i] = vector[vector.length - 1 - i];
        }

        return resultado;
    }

-     /**
* Funcion para dar tiempo de pausa 
*/
public static void pausa() {
   
   try {
       Thread.sleep(1000); // Pausa de 1 segundo
   } catch (InterruptedException e) {
       System.out.println("El hilo fue interrumpido.");
   }
}

//diagonal
    public static void main(String[] args) {
        // Declarar un array de ejemplo
        int[][] array = {
            {1, 2, 3, 4, 5},
            {6, 7, 8, 9, 10},
            {11, 12, 13, 14, 15},
            {16, 17, 18, 19, 20}
        };
        
        // Inicializar variables para la suma y el conteo
        int sum = 0;
        int count = 0;
        
        // Recorrer la diagonal de la esquina superior derecha a la esquina inferior izquierda
        for (int i = 0; i < array.length; i++) {
            int j = array[i].length - 1 - i; // Calcular la columna correspondiente
            sum += array[i][j]; // Sumar el valor en la diagonal
            count++; // Incrementar el conteo de elementos
        }
        
        // Calcular la media
        double average = (double) sum / count;
        
        // Imprimir el resultado
        System.out.println("La suma de la diagonal es: " + sum);
        System.out.println("El promedio de la diagonal es: " + average);
    }
